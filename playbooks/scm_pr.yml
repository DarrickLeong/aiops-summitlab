- name: Create lightspeed_playbooks repository on Gitea
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Set input vars
      ansible.builtin.set_fact:
        repo_name: "{{ input_repo_name | default('lightspeed_playbooks') }}"
        repo_description: "{{ input_repo_description | default('Repository for Lightspeed Ansible Playbooks') }}"

    - name: Retrieve a repository from a distant location and make it available locally
      ansible.scm.git_retrieve:
        branch:
          duplicate_detection: false
          name: main
        origin:
          url: "{{ gitea_url }}/lab-user/{{ repo_name }}.git"
          token: "{{ gitea_token }}"
      register: repository
      
    # Safety guard: Ensure AI-generated playbook is compatible with target inventory
    - name: Ensure execution readiness for AI-generated playbook
      block:

        - name: Parse Lightspeed playbook into a variable
          ansible.builtin.set_fact:
            parsed_playbook: "{{ lightspeed_playbook | from_yaml }}"

        - name: Check if 'hosts' value requires standardization
          ansible.builtin.set_fact:
            modify_hosts: "{{ parsed_playbook[0].hosts not in ['all', 'node1'] }}"

        - name: Safety guard: Standardize 'hosts' value for reliability
          ansible.builtin.set_fact:
            parsed_playbook: "{{ parsed_playbook | map('combine', {'hosts': 'all'}) | list }}"
          when: modify_hosts

        - name: Convert back to string (preserve formatting)
          ansible.builtin.set_fact:
            lightspeed_playbook_parsed: "{{ parsed_playbook | to_nice_yaml(indent=2, sort_keys=False) }}"

        - name: Update stat with final playbook version
          ansible.builtin.set_stats:
            data:
              lightspeed_playbook_parsed: "{{ lightspeed_playbook_parsed }}"

      tags: preflight

    # - name: Parse Lightspeed playbook into a variable
    #   ansible.builtin.set_fact:
    #     parsed_playbook: "{{ lightspeed_playbook | from_yaml }}"

    # - name: Force hosts to 'all' in the first play
    #   ansible.builtin.set_fact:
    #     parsed_playbook: >-
    #       {{
    #         parsed_playbook | map('combine', {'hosts': 'all'}) | list
    #       }}

    # - name: Convert back to string (preserve formatting)
    #   ansible.builtin.set_fact:
    #     lightspeed_playbook_parsed: "{{ parsed_playbook | to_nice_yaml(indent=2, sort_keys=False) }}"

    # - name: Update stat with the final version
    #   ansible.builtin.set_stats:
    #     data:
    #       lightspeed_playbook_parsed: "{{ lightspeed_playbook }}"

    # Don't deserialize â€“ just save the raw YAML string
    - name: Save formatted YAML response to file (preserve key order)
      ansible.builtin.copy:
        content: "{{ lightspeed_playbook_parsed }}"
        dest: "{{ repository['path'] }}/lightspeed-response.yml"
        mode: '0644'

    - name: Publish the changes
      ansible.scm.git_publish:
        path: "{{ repository['path'] }}"
        token: "{{ gitea_token }}"
