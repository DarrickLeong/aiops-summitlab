---
- name: Create lightspeed_playbooks repository on Gitea
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Set input vars
      ansible.builtin.set_fact:
        gitea_url: "https://bastion.tnn56.sandbox1790.opentlc.com:488"  # Replace with your Gitea URL
        repo_name: "{{ input_repo_name | default('lightspeed_playbooks') }}"
        repo_description: "{{ input_repo_description | default('Repository for Lightspeed Ansible Playbooks') }}"
        gitea_username: "{{ input_gitea_username | default('lab-user') }}"
        gitea_password: "{{ input_gitea_password | default('Mjg0MDM4_1') }}"

    - name: Get authentication cookie
      ansible.builtin.uri:
        url: "{{ gitea_url }}/user/login"
        method: GET
        status_code: 200
        validate_certs: false
        return_content: true
      register: login_page

    - name: Extract CSRF token
      ansible.builtin.set_fact:
        csrf_token: "{{ login_page.content | regex_search('name=\"_csrf\" value=\"([^\"]+)\"', '\\1') | default([], true) | first | default('') }}"

    - name: Debug extracted login CSRF token
      ansible.builtin.debug:
        var: csrf_token

    - name: Login to Gitea
      ansible.builtin.uri:
        url: "{{ gitea_url }}/user/login"
        method: POST
        body_format: form-urlencoded
        body:
          user_name: "{{ gitea_username }}"
          password: "{{ gitea_password }}"
          _csrf: "{{ csrf_token }}"
        status_code: [200, 302, 303]
        follow_redirects: all
        validate_certs: false
        return_content: true
      register: login_result

    - name: Check if repository already exists
      ansible.builtin.uri:
        url: "{{ gitea_url }}/{{ gitea_username }}/{{ repo_name }}"
        method: GET
        status_code: [200, 404]
        headers:
          Cookie: "{{ login_result.cookies_string }}"
        validate_certs: false
      register: repo_check

    - name: Debug repository existence check
      ansible.builtin.debug:
        var: repo_check.status

    - name: Get CSRF token for repository creation
      ansible.builtin.uri:
        url: "{{ gitea_url }}/repo/create"
        method: GET
        status_code: 200
        validate_certs: false
        headers:
          Cookie: "{{ login_result.cookies_string }}"
        return_content: true
      register: create_page
      when: repo_check.status == 404

    - name: Extract repository creation CSRF token
      ansible.builtin.set_fact:
        repo_csrf_token: "{{ create_page.content | regex_search('name=\"_csrf\" value=\"([^\"]+)\"', '\\1') | default([], true) | first | default('') }}"
      when: repo_check.status == 404

    - name: Debug extracted repo creation CSRF token
      ansible.builtin.debug:
        var: repo_csrf_token
      when: repo_check.status == 404

    - name: Create repository
      ansible.builtin.uri:
        url: "{{ gitea_url }}/repo/create"
        method: POST
        body_format: form-urlencoded
        body:
          _csrf: "{{ repo_csrf_token }}"
          repo_name: "{{ repo_name }}"
          description: "{{ repo_description }}"
          private: "on"
          auto_init: "on"
          gitignores: "Python"
          license: "MIT"
        status_code: [200, 302, 303]
        follow_redirects: all
        headers:
          Cookie: "{{ login_result.cookies_string }}"
          Referer: "{{ gitea_url }}/repo/create"
          Content-Type: "application/x-www-form-urlencoded"
        validate_certs: false
        return_content: true
      register: repo_create
      when: repo_check.status == 404

    - name: Check if repository was created
      ansible.builtin.uri:
        url: "{{ gitea_url }}/{{ gitea_username }}/{{ repo_name }}"
        method: GET
        status_code: [200, 404]
        headers:
          Cookie: "{{ login_result.cookies_string }}"
        validate_certs: false
      register: repo_check_final

    - name: Display repository creation status
      ansible.builtin.debug:
        msg: >-
          {% if repo_check_final.status == 200 %}
            Repository {{ repo_name }} created or already exists.
          {% else %}
            Failed to create repository {{ repo_name }}.
          {% endif %}
